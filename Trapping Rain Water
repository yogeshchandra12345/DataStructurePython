Given n non-negative integers representing an elevation map where the width of each bar is 1. 
Write a program to compute how much water it is able to trap after raining.
Input: [0,1,0,2,1,0,1,3,2,1,2,1]
Output: 6

class Solution(object):
    # @param A, a list
    # @return an integer
    def maxWaterTrapped(self, a):
        # take two pointers first, second.
        # fix first pointer to max of left array and iterate by second pointer
        # if second pointer is greater than first, initialilze first to second pointer and continue.
      
        if len(a)<2 : # Check length of array
            return 0
        first = a[0]
        second = a[1]
        result = 0 
        for i in a[1:]:
            second = i
            if second > first:
                first = second
                second = None
            else:
                result += first-second
       # print(first, second)
        second = 0 
        if second < first: 
            # if first pointer is less than second.
            # remove extra added water from end of the array.
            for i in a[::-1]:
                second = max(second,i)
                if second != first and second < first:
                    result -= first-second
                else:
                    break
        #print(result)
        return result
